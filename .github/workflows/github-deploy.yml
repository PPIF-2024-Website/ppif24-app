on:
  push:
    branches:
      - main

name: üöÄ Deploy website on push

jobs:
  web-deploy:
    name: üéâ Deploy
    runs-on: ubuntu-24.04

    steps:
      - name: üöö Get latest code
        uses: actions/checkout@v3

      - name: üì¶ Install dependencies
        run: |
          composer install --no-dev --prefer-dist --optimize-autoloader
          npm ci

      - name: üõ†Ô∏è Build assets
        run: npm run build

      - name: üìÇ Sync files
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.ftp_server }}
          username: ${{ secrets.ftp_username }}
          password: ${{ secrets.ftp_password }}
          local-dir: ./
          server-dir: public_html/laravel/
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/vendor/**
            **/.github/**

      - name: üóëÔ∏è Rename .env.example to .env and update environment variables
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_SERVER }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.CPANEL_PASSWORD }}
          port: 45022
          script: |
            cd public_html/laravel/

            if [ -f .env.example ]; then
                mv .env.example .env
                sed -i 's/^APP_NAME=.*/APP_NAME="PPIF"/' .env
                sed -i 's/^APP_DEBUG=.*/APP_DEBUG="FALSE"/' .env
                sed -i 's|^APP_URL=.*|APP_URL="https://ppifumn.com"|' .env
                sed -i 's/^DB_DATABASE=.*/DB_DATABASE="${{ secrets.DB_DATABASE }}"/' .env
                sed -i 's/^DB_USERNAME=.*/DB_USERNAME="${{ secrets.DB_USERNAME }}"/' .env
                sed -i 's/^DB_PASSWORD=.*/DB_PASSWORD="${{ secrets.DB_PASSWORD }}"/' .env
            else
                echo ".env.example not found, skipping rename."
            fi

      - name: Copy contents of public to root public_html
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_SERVER }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.CPANEL_PASSWORD }}
          port: 45022
          script: |
            cp -r public_html/laravel/public/* public_html/

      - name: Replace index.php in public_html
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_SERVER }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.CPANEL_PASSWORD }}
          port: 45022
          script: |
            cd public_html/
            rm -f index.php
            mv index.php.jagoan index.php

      - name: Composer Install
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_SERVER }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.CPANEL_PASSWORD }}
          port: 45022
          script: |
            cd public_html/laravel/
            composer install --no-dev --prefer-dist --optimize-autoloader

      - name: Database Migration
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_SERVER }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.CPANEL_PASSWORD }}
          port: 45022
          script: |
            ls  
            sed -i 's/^APP_ENV=.*/APP_ENV="local"/' .env
            cd public_html/laravel/
            php artisan key:generate
            php artisan migrate:fresh --seed
            ls
            sed -i 's/^APP_ENV=.*/APP_ENV="production"/' .env

      - name: ‚úÖ Check deployment status
        run: echo "Deployment complete!"
        if: ${{ success() }}

      - name: üö® Upload logs if deployment fails
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: deployment-logs
          path: ./logs

      - name: üõ°Ô∏è Cleanup
        if: always()
        run: echo "Running cleanup steps..."

      - name: üìß Notify on failure
        if: ${{ failure() }}
        run: echo "Deployment failed, sending notification!"

      - name: üìß Notify on success
        if: ${{ success() }}
        run: echo "Deployment successful, sending notification!"
