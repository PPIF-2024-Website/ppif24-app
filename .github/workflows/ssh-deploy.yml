name: 🚀 Deploy website on push

on:
  push:
    branches:
      - main

jobs:
  web-deploy:
    name: 🎉 Deploy
    runs-on: ubuntu-24.04

    steps:
      - name: 🚚 Get latest code
        uses: actions/checkout@v3

      - name: 📦 Install dependencies
        run: |
          composer install --no-dev --prefer-dist --optimize-autoloader
          npm ci

      - name: 🛠️ Build assets
        run: npm run build

      - name: Install expect
        run: sudo apt-get install expect

      - name: Setup SSH with passphrase
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -t rsa ${{ secrets.ssh_server }} >> ~/.ssh/known_hosts
          expect -c '
          spawn ssh-add ~/.ssh/id_rsa
          expect "Enter passphrase"
          send "${{ secrets.SSH_PASSPHRASE }}\r"
          interact'

      - name: 📂 Sync files using rsync
        run: |
          rsync -avz --exclude=".git*" --exclude="node_modules/" --exclude="vendor/" --exclude=".github/" \
          ./ ${{ secrets.ssh_username }}@${{ secrets.ssh_server }}:/home/${{ secrets.ssh_username }}/public_html/laravel/

      - name: 🗑️ Remove .env and rename .env.jagoan to .env
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.ssh_username }}@${{ secrets.ssh_server }} << 'EOF'
          cd public_html/laravel/
          rm -f .env
          mv .env.jagoan .env
          EOF

      - name: Replace index.php in public_html
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.ssh_username }}@${{ secrets.ssh_server }} << 'EOF'
          cd public_html/
          rm -f index.php
          mv index.php.jagoan index.php
          EOF

      - name: Install dependencies on server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.ssh_username }}@${{ secrets.ssh_server }} << 'EOF'
          cd public_html/laravel/
          composer install --no-dev --prefer-dist --optimize-autoloader
          EOF

      - name: ✅ Check deployment status
        run: echo "Deployment complete!"
        if: ${{ success() }}

      - name: 🚨 Upload logs if deployment fails
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: deployment-logs
          path: ./logs

      - name: 🛡️ Cleanup
        if: always()
        run: echo "Running cleanup steps..."

      - name: 📧 Notify on failure
        if: ${{ failure() }}
        run: echo "Deployment failed, sending notification!"

      - name: 📧 Notify on success
        if: ${{ success() }}
        run: echo "Deployment successful, sending notification!"
